@model CodeBud.Models.Entities.Question

@{
    ViewBag.Title = "Yeni Soru Ekle";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section Styles {
    <style>
        .custom-form-container {
            max-width: 800px;
            margin: 40px auto;
            background-color: #ffffff;
            padding: 30px;
            border-radius: 12px;
            box-shadow: 0 5px 20px rgba(0, 0, 0, 0.05);
        }

        h2 {
            font-weight: 700;
            color: #343a40;
            margin-bottom: 30px;
        }

        .form-group label {
            font-weight: 500;
            margin-bottom: 6px;
        }

        .form-control {
            border-radius: 8px;
        }

        .form-text {
            font-size: 0.875rem;
            color: #6c757d;
        }

        .btn-success {
            width: 100%;
            font-weight: 600;
            padding: 12px;
            border-radius: 8px;
        }

        .btn-outline-secondary {
            margin-top: 10px;
        }

        textarea {
            resize: vertical;
        }
    </style>
}

<div class="custom-form-container">
    <h2>📝 Yeni Soru Ekle</h2>

    @using (Html.BeginForm("Create", "Question", FormMethod.Post))
    {@Html.AntiForgeryToken()
    <div class="form-group">
        @Html.LabelFor(m => m.Title)
        @Html.TextBoxFor(m => m.Title, new { @class = "form-control", placeholder = "Başlık giriniz" })
    </div>

    <div class="form-group mt-3">
        @Html.Label("Etiket Seç veya Yeni Ekle")
        @Html.DropDownListFor(m => m.TagId,
            new SelectList(ViewBag.Tags, "TagId", "TagName"),
            "-- Var olan etiketi seçin --",
            new { @class = "form-control", id = "tagDropdown" })

        <small class="text-muted d-block mt-2">veya yeni bir etiket ekle:</small>
        @Html.TextBox("NewTag", null, new { @class = "form-control", placeholder = "Yeni etiket girin", id = "newTagInput" })
    </div>

    <div class="form-group mt-3">
        @Html.LabelFor(m => m.Description)
        <div class="position-relative">
            @Html.TextAreaFor(m => m.Description, new
            {
                @class = "form-control",
                @id = "questionBody",
                placeholder = "Sorununuzu detaylıca yazın. Kod olan kısmı seçip aşağıdaki butona basın.",
                rows = 10
            })
            <button type="button" class="btn btn-sm btn-outline-secondary" onclick="wrapSelectedWithCode()">💡 Seçilen Kodu Biçimlendir</button>
        </div>
        <small class="form-text">
            Kod bloğu için <code>&lt;pre&gt;&lt;code&gt;...&lt;/code&gt;&lt;/pre&gt;</code> otomatik eklenir.
        </small>
    </div>

    <button type="submit" class="btn btn-success mt-4">✅ Soruyu Gönder</button>
}
</div>

<script>
    function wrapSelectedWithCode() {
        const textarea = document.getElementById("questionBody");
        const start = textarea.selectionStart;
        const end = textarea.selectionEnd;

        if (start === end) {
            alert("Kod olarak biçimlendirmek için önce bir metin seçin.");
            return;
        }

        const selectedText = textarea.value.substring(start, end);
        const before = textarea.value.substring(0, start);
        const after = textarea.value.substring(end);

        const wrapped = "<pre><code>" + selectedText + "</code></pre>";
        textarea.value = before + wrapped + after;

        textarea.selectionStart = start;
        textarea.selectionEnd = start + wrapped.length;
        textarea.focus();
    }
</script>
